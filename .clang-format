# XJTU-RMV C++ Coding Style
# 基础风格：基于 LLVM 编码风格。这是所有后续配置的基础。
BasedOnStyle: LLVM
# 缩进宽度：每次缩进使用 2 个空格。
IndentWidth: 2
# Tab 宽度：一个 Tab 字符的宽度视为 2 个空格。
TabWidth: 2
# 使用 Tab 键：从不使用 Tab 进行缩进，强制使用空格。
UseTab: Never

# --------------------------------------------------
# 大括号换行风格 (BraceWrapping)
# --------------------------------------------------
# 此部分详细定义了左大括号'{'是否需要换行。
# 'false' 表示左大括号 '{' 跟在定义的末尾，不单独占一行 (K&R 风格)。
BraceWrapping:
  # class 或 struct 定义后的大括号是否换行。
  AfterClass: false
  # if/for/while/switch 等控制语句后的大括号是否换行。
  AfterControlStatement: false
  # enum 定义后的大括号是否换行。
  AfterEnum: false
  # 函数定义后的大括号是否换行。
  AfterFunction: false
  # namespace 定义后的大括号是否换行。
  AfterNamespace: false
  # struct 定义后的大括号是否换行。
  AfterStruct: false
  # union 定义后的大括号是否换行。
  AfterUnion: false
  # catch 前的大括号是否换行。
  BeforeCatch: false
  # else 前的大括号是否换行。
  BeforeElse: false
  # 是否缩进大括号。false 表示大括号与外部代码块对齐。
  IndentBraces: false

# --------------------------------------------------
# 对齐相关 (Alignment)
# --------------------------------------------------
# 是否对齐连续的多行赋值语句的等号 '='。
AlignConsecutiveAssignments: true
# 是否对齐连续的多行声明的变量名。
AlignConsecutiveDeclarations: true
# 对齐多行宏定义中的反斜杠 '\'。'Left' 表示左对齐。
AlignEscapedNewlines: Left
# 是否对齐多行表达式中的操作符。
AlignOperands: true
# 是否对齐行尾的注释。
AlignTrailingComments: true

# --------------------------------------------------
# 换行规则 (Line Breaking)
# --------------------------------------------------
# 大括号换行模式。'Custom' 表示使用上面 BraceWrapping 中的自定义规则。
BreakBeforeBraces: Custom
# 构造函数初始化列表的换行方式。'AfterColon' 表示在冒号 ':' 后换行。
BreakConstructorInitializers: AfterColon
# 类继承列表的换行方式。'AfterColon' 表示在冒号 ':' 后换行。
BreakInheritanceList: AfterColon
# 每行的最大字符数限制。
ColumnLimit: 100
# 是否允许短函数写在同一行。'Empty' 表示只允许空函数，如 'void foo() {}'。
AllowShortFunctionsOnASingleLine: true
# 是否允许短的 if 语句写在同一行 (禁用)。
AllowShortIfStatementsOnASingleLine: true
# 是否允许短的循环语句写在同一行 (禁用)。
AllowShortLoopsOnASingleLine: true

# --------------------------------------------------
# 命名空间与头文件 (Namespace & Includes)
# --------------------------------------------------
# 命名空间内的代码缩进方式。'All' 表示所有内容都缩进。
NamespaceIndentation: All
# 是否自动对 #include 指令进行排序。
SortIncludes: true
# 对 #include 块进行重新分组和排序。
IncludeBlocks: Regroup

# --------------------------------------------------
# 其他细节 (Miscellaneous)
# --------------------------------------------------
# 指针符号 '*' 和引用符号 '&' 的对齐方式。'Left' 表示左对齐，紧随类型，如 'int* p'。
PointerAlignment: Left
# 是否在 C 风格的类型转换后添加空格，如 '(int) a'。
SpaceAfterCStyleCast: true
# 行尾注释前需要多少个空格。
SpacesBeforeTrailingComments: 1
# 使用 C++11 的花括号列表风格。true 表示花括号 { 和前面的标识符之间没有空格，如 'vector<int>{1, 2, 3}'。
Cpp11BracedListStyle: true
# 指定遵循的 C++ 标准。这会影响一些新的语法格式，如 'requires' 子句。
Standard: c++17